{"ast":null,"code":"const port = process.env.PORT || 3000;\nexport async function Fetch(type) {\n  try {\n    const response = await fetch(\"http://localhost:3000/api/\" + type);\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(\"Error occured\");\n    }\n    return data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n_c = Fetch;\nvar _c;\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"names":["port","process","env","PORT","Fetch","type","response","fetch","data","json","ok","Error","error","console","message","_c","$RefreshReg$"],"sources":["/Users/luthanhar/Documents/PP practice/MERN/Intern Assignment/battleGround-page/frontend-battlepage/src/components/apiCalls.jsx"],"sourcesContent":["const port = process.env.PORT || 3000;\n\nexport async function Fetch(type) {\n    try {\n        const response = await fetch(\"http://localhost:3000/api/\" + type);\n        const data = await response.json()\n        if (!response.ok) {\n            throw new Error(\"Error occured\")\n        }\n        return data\n\n    }\n    catch (error) {\n        console.error(error.message)\n\n    }\n\n}"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AAErC,OAAO,eAAeC,KAAKA,CAACC,IAAI,EAAE;EAC9B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,GAAGF,IAAI,CAAC;IACjE,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IACpC;IACA,OAAOH,IAAI;EAEf,CAAC,CACD,OAAOI,KAAK,EAAE;IACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;EAEhC;AAEJ;AAACC,EAAA,GAfqBX,KAAK;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}